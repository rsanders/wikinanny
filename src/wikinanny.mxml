<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:wn="lib.components.*"
   name="wikiNanny"
   layout="vertical"
   applicationComplete="onComplete()"
   title="WikiNanny">
 
	<mx:Script>
	<![CDATA[

	import mx.core.FlexHTMLLoader;
	import mx.resources.Locale;
	import com.flexspy.FlexSpy;
	import lib.WikiNanny;
	
	public var nanny:WikiNanny = new WikiNanny();
	
	public var currentHTML:HtmlViewer;
	
	public function getLanguage():String {
		var locale:String = resourceManager.getLocales()[0];
		var lang:String = locale.replace(/_.*$/, '');
		return lang;		
	}
	
	private function onComplete():void 
	{
		currentHTML = mainHTML;
		nanny.supervise(currentHTML.html);
		
		bindKeys();
		this.addEventListener(FocusEvent.FOCUS_IN, handleFocusChange);
		currentHTML.addEventListener(Event.LOCATION_CHANGE, handleLocationChange);
		// currentHTML.html.addEventListener(Event.LOCATION_CHANGE, handleLocationChange);
		loadSubject("Main_Page");
	}
	
	private function handleFocusChange(event:FocusEvent):void 
	{
		trace("target is " + event.target.toString());
	}
	
	private function handleKeyUp(event:KeyboardEvent):void 
	{
		if (event.commandKey || event.ctrlKey) {
			handleCommandKey(event);
		}
	}
	
	private function handleCommandKey(event:KeyboardEvent):void 
	{
		var stop:Boolean = true;
		switch (event.keyCode) {
			case Keyboard.L:
				urlTextInput.setFocus();
				urlTextInput.selectionBeginIndex = 0;
				urlTextInput.selectionEndIndex = urlTextInput.text.length;
				break;
			// zoom text
			case Keyboard.EQUAL:
				currentHTML.scaleUp();
				break;
			// unzoom text
			case Keyboard.MINUS:
				currentHTML.scaleDown();
				break;
			default:
				stop = false;
				trace("Unknown control/command key: " + event.keyCode);
		}
		
		if (stop) event.stopPropagation();
	}
	
	private function bindKeys():void 
	{
		this.addEventListener(KeyboardEvent.KEY_UP, handleKeyUp);
		var children:Array = this.getChildren();
		for (var i:int = 0; i < children.length; i++) {
			var child:Object = children[i];
			child.addEventListener(KeyboardEvent.KEY_UP, handleKeyUp);
		}
		
	}

	private function abortLocationEdit():void 
	{
		urlTextInput.selectionBeginIndex = urlTextInput.selectionEndIndex  = -1;
		updateLocationInput();
		currentHTML.setDocumentFocus();
	}

	private function handleInputKeyUp(event:KeyboardEvent):void 
	{
		var stop:Boolean = false;
		if (event.commandKey || event.ctrlKey) {
			switch (event.keyCode) {
				
			}
		} else if (! event.commandKey && ! event.shiftKey && ! event.altKey && ! event.ctrlKey) {
			switch (event.keyCode) {
				case Keyboard.ESCAPE:
					abortLocationEdit();
					break;

				case Keyboard.ENTER:
					loadInputLocation();
					break;
			}
		}
		
		if (stop) event.stopImmediatePropagation();
	}

	private function extractSubject(location:String):String 
	{
		location = location.replace(/^http:\/\/.*\.wikipedia.org\/wiki\/([^?#]*)([?#].*)?/, '$1');
		location = location.replace(/[_+-]/g, ' ');
		return location;
	}

	private function updateLocationInput():void 
	{
		// don't update for temporary redirects
		if (currentHTML.html.location.match(/search-redirect/)) {
			return;
		}
		urlTextInput.text = extractSubject(currentHTML.html.location);
	}

	private function handleLocationChange(event:Event):void 
	{
		updateLocationInput();
	}

	private function loadInputLocation():void 
	{
		loadSubject(urlTextInput.text);
	}

	private function goBack():void 
	{
			currentHTML.html.historyBack();		
	}

	private function goForward():void 
	{
			currentHTML.html.historyForward();		
	}

	public function loadURL(url:String):void 
	{
		currentHTML.html.location = url;
	}

	public function loadSubject(name:String):void 
	{
		var url:String = "http://www.wikipedia.org/search-redirect.php?search=" + name + "&language=" + getLanguage();
		currentHTML.html.location = url;
		currentHTML.setDocumentFocus();
	}

	]]>
	</mx:Script>

	<mx:ApplicationControlBar width="100%">
		<mx:VBox width="100%">
			<mx:HBox width="100%">
				<mx:Button id="backButton" label="&lt;" fontWeight="bold" click="goBack()"/>
				<mx:Button id="forwardButton" label="&gt;" fontWeight="bold" click="goForward()"/>
				<mx:Label text="Subject" fontWeight="bold"/>
				<mx:TextInput id="urlTextInput" text="" width="100%" keyUp="handleInputKeyUp(event)"/>
				<mx:Button id="urlButton" label="Search" click="loadInputLocation()"/>
				<mx:Button id="btnFlexSpy" label="FlexSpy" click="FlexSpy.show()" />
				
			</mx:HBox>
		</mx:VBox>
	</mx:ApplicationControlBar>
	
	<!-- the main event -->
	<wn:HtmlViewer id="mainHTML" width="100%" height="100%" />

</mx:WindowedApplication>
