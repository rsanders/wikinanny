<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
	creationComplete="onComplete()" 
	width="100%" height="100%">


	<mx:Script>
	<![CDATA[

	import mx.core.FlexHTMLLoader;
	import mx.resources.Locale;

	public var scaleFactor:Number = 1.1;

	private function onComplete():void {
		bindKeys();
		
		this.addEventListener(FocusEvent.FOCUS_IN, handleFocusChange);
		// html.addEventListener(Event.LOCATION_CHANGE, handleLocationChange);
	}
	
	private function handleFocusChange(event:FocusEvent):void {
		trace("target is " + event.target.toString());
	}
	
	private function handleKeyUp(event:KeyboardEvent):void {
		if (event.commandKey || event.ctrlKey) {
			handleCommandKey(event);
		}
	}
	
	public function scaleUp():void {
		trace("Scaling up");
		var ss:Object = html.htmlLoader.window.document.styleSheets;
		var sheet:Object = ss[0];
		html.scaleY *= scaleFactor;
		html.scaleX *= scaleFactor;		
	}

	public function scaleDown():void {
		trace("Scaling down");
		html.scaleY /= scaleFactor;
		html.scaleX /= scaleFactor;		
	}

	private function handleCommandKey(event:KeyboardEvent):void {
		var stop:Boolean = false;
		switch (event.keyCode) {
			default:
				stop = false;
				trace("Unknown control/command key: " + event.keyCode);
		}
		
		if (stop) event.stopPropagation();
	}
	
	private function bindKeys():void {
		this.addEventListener(KeyboardEvent.KEY_UP, handleKeyUp);
		var children:Array = this.getChildren();
		for (var i:int = 0; i < children.length; i++) {
			var child:Object = children[i];
			child.addEventListener(KeyboardEvent.KEY_UP, handleKeyUp);
		}
		
	}

	public function loadURL(url:String):void {
		html.location = url;
	}

	public function setDocumentFocus():void {
		html.setFocus();
		html.focusManager.setFocus(html.htmlLoader as FlexHTMLLoader);
	}
	
	]]>
	</mx:Script>

	<!-- the main event -->
	<mx:HTML id="html" width="100%" height="100%" />
</mx:Canvas>
